name: CI

on:
  push:
    branches: [ new-feature ]

env:
  TKE_IMAGE_URL: hkccr.ccs.tencentyun.com/gaea/back-end-test
  TKE_REGION: ap-beijing
  TKE_CLUSTER_ID: cls-2ferrnvh
  DEPLOYMENT_NAME: gaea-test

jobs:
  ci:
    name: 进行持续集成
    runs-on: ubuntu-latest
    steps:

      - name: 检出代码
        uses: actions/checkout@v2

      # https://github.community/t/github-actions-cant-connect-to-mysql/17885
      # https://github.blog/changelog/2020-02-21-github-actions-breaking-change-ubuntu-virtual-environments-will-no-longer-start-the-mysql-service-automatically/
      - name: 启动系统自带 MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -uroot -proot -e 'create database gaea_unit_test character set utf8mb4;'

      - name: 单元测试
        # 禁用并发测试 https://studygolang.com/articles/12587
        run: go test -p 1 ./... -race -coverprofile=coverage.txt -covermode=atomic
        env:
          UNIT_TEST_MYSQL_DSN_GAEA: "root:root@tcp(127.0.0.1:3306)/gaea_unit_test?charset=utf8mb4&parseTime=True&loc=Local"

      - name: 上传单元测试结果
        uses: codecov/codecov-action@v1.0.14
        with:
          token: ${{secrets.CODECOV_TOKEN}}

      # 如果不修正时区，会导致后续交叉编译步骤中，注入程序的版本号中的时间不正确
      # https://blog.csdn.net/xo19882011/article/details/83789702
      - name: 修正构建环境的时区
        run: |
          sudo rm /etc/localtime
          sudo ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

      - name: 交叉编译
        # 不添加构建参数 CGO_ENABLED=0 会导致编译出的二进制程序无法在 alpine 中运行
        run: CGO_ENABLED=0 go build -ldflags "-X 'github.com/offcn-jl/gaea-back-end/commons/config.Version=${GITHUB_SHA:0:7} [ `date +"%Y/%m/%d %H:%M:%S"` ]'" -o gaea

      - name: 添加 phonedata 库的手机号归属地代码数据到 Docker 的上下文
        run: cp /home/runner/go/pkg/mod/github.com/xluohome/phonedata@v0.0.0-20200423024337-2be14779ab82/phone.dat ./

      - name: 构建镜像
        run: |
          docker build -t ${TKE_IMAGE_URL}:${GITHUB_SHA:0:7} .
          docker tag ${TKE_IMAGE_URL}:${GITHUB_SHA:0:7} ${TKE_IMAGE_URL}:latest

      - name: 推送镜像
        run: |
          docker login -u ${{secrets.TKE_REGISTRY_USER}} -p ${{secrets.TKE_REGISTRY_PASSWORD}} hkccr.ccs.tencentyun.com
          docker push ${TKE_IMAGE_URL}:${GITHUB_SHA:0:7}
          docker push ${TKE_IMAGE_URL}:latest

      - name: 配置 Kustomize
        run: |
          curl -o kustomize --location https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

      - name: 配置 ~/.kube/config 用于连接 TKE 集群
        uses: TencentCloud/tke-cluster-credential-action@v1
        with:
          secret_id: ${{ secrets.TENCENT_CLOUD_SECRET_ID }}
          secret_key: ${{ secrets.TENCENT_CLOUD_SECRET_KEY }}
          tke_region: ${{ env.TKE_REGION }}
          cluster_id: ${{ env.TKE_CLUSTER_ID }}

      - name: 切换到 TKE 上下文
        run: |
          kubectl config use-context ${TKE_CLUSTER_ID}-context-default

      - name: 部署镜像到 TKE 上下文
        run: |
          echo ${TKE_IMAGE_URL}:latest
          echo ${TKE_IMAGE_URL}:${GITHUB_SHA:0:7}
          ./kustomize edit set image -h
          ./kustomize edit set image ${TKE_IMAGE_URL}:latest
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/${DEPLOYMENT_NAME}
          kubectl get services -o wide
